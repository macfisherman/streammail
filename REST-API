STREAM

Stream is a set of messages between two entities. The stream is stored at a singular place, a stream server.
A stream has an address, which is only shared by the two entities.

STREAM addresses are in base58Check form (like bitcoin) but use the resulting secret key found
via ECDH. That is, each entity uses their own private key in combination with the other recipients
public key to derive a secret (ECDH). Then the following is done:

TYPE[1 byte] = 0x04 (means uncompressed key)
SECRET = X 32 bytes || Y 32 bytes
HASH1[20 bytes] = RIPEMD-160(SHA256(TYPE || SECRET))
CHECKSUM[4 bytes] = first 4 bytes of SHA256(SHA256(TYPE HASH1)) (32 bytes)

ROUTE-PREFIX [1 byte] = 62 (decimal)
BINARY-ADDRESS [25 bytes] = ROUTE-PREFIX HASH1 CHECKSUM
STREAM ADDRESS (human readable) = BASE58(BINARY-ADDRESS) (treat binary address as two base256 numbers)

STREAM servers CAN provide STREAM address generation
STREAM servers MUST validate STREAM addresses with Base58Check

STREAM messages SHOULD be blocked/symetrically encrypted with the secret from ECDH.
This allows both parties to read messages, but a STREAM server doesn't enforce this and treats
the data opacly (Sp?).

STREAM addresses start with S or R.
   
Stream servers use HTTPS and REST.

Flow:

POST /address
	{ "address": ADDRESS }
	Register address with server
	ADDRESS MUST conform to base58Check

POST /message/ADDRESS
	The post body contains the message.
	Adds a message to ADDRESS. Returns a message-id. Messages ids are timestamps in UTC
	in RFC3339Nano format

GET /index/ADDRESS
	get's all message-ids, as a JSON array.

GET /index/ADDRESS?from=ID&count=N
	get message ids from ID to ID+N

GET /message/ADDRESS/ID
	gets a single message

There is no delete functionality on a STREAM server

Amazon API GW

POST /stream
	{ "address": ADDRESS }
	Register address with server
	ADDRESS MUST conform to base58Check

POST /stream/ADDRESS/message
	The post body contains the message.
	Adds a message to ADDRESS. Returns a message-id. Messages ids are timestamps in UTC
	in RFC3339Nano format

GET /stream/ADDRESS
	get's all message-ids, as a JSON array.

GET /stream/ADDRESS/index?from=ID&count=N
	get message ids from ID to ID+N

GET /stream/ADDRESS/message/ID
	gets a single message





